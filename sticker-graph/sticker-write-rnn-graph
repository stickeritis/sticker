#!/usr/bin/env python3

from sticker_graph.rnn_model import RNNModel
from sticker_graph.write_helper import get_common_parser, create_graph

if __name__ == '__main__':
    parser = get_common_parser()

    parser.add_argument(
        "--gru",
        help="use GRU RNN cells",
        action="store_true")
    parser.add_argument(
        "--hidden_size",
        type=int,
        help="neurons in the hidden layer of the rnn",
        default=200)
    parser.add_argument(
        "--rnn_layers",
        type=int,
        help="stacked RNN layers",
        default=2)
    parser.add_argument(
        "--keep_prob",
        type=float,
        help="dropout keep probability",
        default=0.85)
    parser.add_argument(
        "--keep_prob_input",
        type=float,
        help="input keep probability",
        default=0.80)
    parser.add_argument(
        "--residual",
        action='store_true',
        default=False,
        help="Use residual skip connections between RNN layers."
    )
    args = parser.parse_args()

    model = RNNModel

    print("Model: rnn, gru: %r, crf: %r, layers: %d\n"
          "Dropout input: %.2f, hidden: %.2f" %
          (args.gru, args.crf, args.rnn_layers,
           args.keep_prob_input, args.keep_prob))

    create_graph(model, args)
